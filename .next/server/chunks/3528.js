"use strict";exports.id=3528,exports.ids=[3528],exports.modules={93528:(e,r,i)=>{i.r(r),i.d(r,{fromProcess:()=>a});var t=i(27634),o=i(15017),s=i(32081),n=i(73837);let c=(e,r)=>{if(1!==r.Version)throw Error(`Profile ${e} credential_process did not return Version 1.`);if(void 0===r.AccessKeyId||void 0===r.SecretAccessKey)throw Error(`Profile ${e} credential_process returned invalid credentials.`);if(r.Expiration){let i=new Date;if(new Date(r.Expiration)<i)throw Error(`Profile ${e} credential_process returned expired credentials.`)}return{accessKeyId:r.AccessKeyId,secretAccessKey:r.SecretAccessKey,...r.SessionToken&&{sessionToken:r.SessionToken},...r.Expiration&&{expiration:new Date(r.Expiration)},...r.CredentialScope&&{credentialScope:r.CredentialScope}}},d=async(e,r,i)=>{let t=r[e];if(r[e]){let r=t.credential_process;if(void 0!==r){let t=(0,n.promisify)(s.exec);try{let i;let{stdout:o}=await t(r);try{i=JSON.parse(o.trim())}catch{throw Error(`Profile ${e} credential_process returned invalid JSON.`)}return c(e,i)}catch(e){throw new o.mV(e.message,{logger:i})}}else throw new o.mV(`Profile ${e} did not contain credential_process.`,{logger:i})}else throw new o.mV(`Profile ${e} could not be found in shared credentials file.`,{logger:i})},a=(e={})=>async()=>{e.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");let r=await (0,t.MX)(e);return d((0,t.Jl)(e),r,e.logger)}}};